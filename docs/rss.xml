<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Demo</title><link>https://GJKen.github.io/demo</link><description> </description><copyright>Demo</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://s2.loli.net/2024/11/13/DNHrdGTfphzQOok.webp</url><title>avatar</title><link>https://GJKen.github.io/demo</link></image><lastBuildDate>Fri, 10 Jan 2025 02:02:17 +0000</lastBuildDate><managingEditor>Demo</managingEditor><ttl>60</ttl><webMaster>Demo</webMaster><item><title>demo测试页</title><link>https://GJKen.github.io/demo/post/2.html</link><description># 标题1&#13;
&#13;
这是一段&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
很长&#13;
测试文本.....&#13;
&#13;
# 标题1。</description><guid isPermaLink="true">https://GJKen.github.io/demo/post/2.html</guid><pubDate>Thu, 09 Jan 2025 08:51:03 +0000</pubDate></item><item><title>Gmeek - 记录使用过程</title><link>https://GJKen.github.io/demo/post/1.html</link><description>[Gmeek](https://github.com/Meekdai/Gmeek) 博客完全依托 Github, 提供域名, 无需服务器, 比起传统的服务器建站更方便快捷.&#13;
&#13;
# 搭建博客&#13;
&#13;
**如何搭建博客我就不写了, 强烈建议看完[官方文档](https://blog.meekdai.com/tag.html#gmeek).**&#13;
&#13;
**这里主要记录一些 js 和 CSS 的修改.记录的修改不一定准确, `Gmeek-spoilertxt='因为改动的地方太多了🥴'`.**&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 利用 Github Page 搭建的网站内容是完全公开的, 请注意不要上传自己的隐私!!!&#13;
&#13;
## 博客调试&#13;
&#13;
**为了方便调试代码, 创建了一个名为 demo 的仓库, 调试过程只会用 demo 演示, 确定后再同步代码到线上模式.&#13;
&#13;
**demo模式:** https://gjken.github.io/demo&#13;
&#13;
**线上模式:** https://gjken.github.io&#13;
&#13;
**线上模式的仓库用 tag 区分代码版本, release 可有可无, 主要是用来说明版本改动(`Gmeek-spoilertxt='懒得写'`)**&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; static 这个目录里的文件发生了改动, 一定要手动 Actions 之后, 再等待20多分钟(`Gmeek-spoilertxt='测试的大概结果'`)才会更新外链内容.&#13;
&#13;
# Config.json 小妙用&#13;
&#13;
## 引用顺序&#13;
&#13;
官方虽然没说, 但是经过我后面测试得出:&#13;
&#13;
`script`字段里面引用的 js 代码, **写在尾巴加载顺序越靠前!**&#13;
&#13;
&gt; 其它字段还未测试过, 不知道是不是一样的道理.&#13;
&#13;
## subTitle - js插入&#13;
&#13;
`subTitle`字段可用 js 插入 html 实现修改文字.&#13;
&#13;
代码:&#13;
&#13;
```json&#13;
'subTitle':'&lt;script&gt;document.getElementById('content').innerHTML = `&lt;div style='text-align: center;'&gt;&lt;p&gt;CV工程师,&lt;/p&gt;&lt;p&gt;一个又菜又爱玩, 喜欢瞎折腾的流浪者.&lt;/p&gt;&lt;/div&gt;`;&lt;/script&gt;',&#13;
```&#13;
&#13;
## subTitle - 隐藏&#13;
&#13;
`'subTitle':' ',`&#13;
&#13;
- 效果图:&#13;
&#13;
![1](https://github.com/user-attachments/assets/a10a731d-60e0-4916-a65a-d1f2c094c3cd)&#13;
&#13;
可以用空白字符的方式, 隐藏`subTitle`这个必须字段, 无需使用 js 隐藏.&#13;
&#13;
# 记录功能块代码&#13;
&#13;
代码摘抄自网络, 有删改, 都存放在仓库, 使用 jsdelivr CDN 加速.&#13;
&#13;
## [ArticleJs.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ArticleJs.js) - 文章自定义 js 代码&#13;
&#13;
### 图片图片浏览器+图片懒加载整合&#13;
&#13;
[图片浏览器的代码](#fancybox.js---图片浏览器)&#13;
&#13;
[图片懒加载的代码](#图片懒加载)&#13;
&#13;
👇这里说明一下, 图片浏览器和图片懒加载的整合后的工作流程:&#13;
&#13;
&lt;details&gt;&lt;summary&gt;点击展开&lt;/summary&gt;&#13;
&#13;
`Gmeek-imgbox`首先匹配到关键字后转化标签.&#13;
&#13;
`Gmeek.py`匹配转换的代码如下:&#13;
&#13;
```python&#13;
        # 剧透&#13;
        if '&lt;code class='notranslate'&gt;Gmeek-spoilertxt' in post_body: &#13;
            post_body = re.sub(r'&lt;code class='notranslate'&gt;Gmeek-spoilertxt='([^']+)'&lt;/code&gt;', lambda match: f'&lt;span class='spoilerText'&gt;{match.group(1)}&lt;/span&gt;', post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
markdown 输入:&#13;
&#13;
```&#13;
`Gmeek-imgbox='https://example.com/image.jpg'`&#13;
```&#13;
&#13;
实际转化后的标签如下:&#13;
&#13;
```html&#13;
&lt;div class='ImgLazyLoad-circle'&gt;&lt;/div&gt;&#13;
&lt;img data-fancybox='gallery' img-src='https://example.com/image.jpg'&gt;&#13;
&#13;
&lt;!--&#13;
一个图片未加载时的占位 CSS 动画 DIV, 类名为 .ImgLazyLoad-circle, 这个类名的 CSS 动画我写在了 primer.css 里面.&#13;
一个 img 标签, 包含 fancybox 所需的 data-fancybox='gallery' 值.&#13;
--&gt;&#13;
```&#13;
&#13;
当页面加载完成后, 使用 IntersectionObserver 监听图片是否进入视口, 图片会提前 500px 接近视口时加载&#13;
&#13;
当图片即将进入视口时, 脚本会检测标签里面的`img-src='https://example.com/image.jpg'`内容,  给 img 标签增加`src`值, 这样图片就能显示了.&#13;
&#13;
在 CSS 中 img 标签默认模糊并且透明图片, 脚本会等待图片加载完成后才会正常显示, 显示图片之前会隐藏掉占位转圈动画, 这样就实现了转圈动画消失并显示正常的图片.&#13;
&#13;
图片加载失败则会创建指定的 SVG 图标以及文字提示, 同时隐藏加载失败的 img 标签和占位动画.&#13;
&#13;
大概就是这样的一个流程.&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## [ArticleToc.js](https://github.com/GJKen/gjken.github.io/blob/main/static/ArticleToc.js) - 文章增加目录列表+一键返回顶部按钮(v1.0)&#13;
&#13;
&gt; 摘抄来源: [Github](https://github.com/cao-gift/cao-gift.github.io?tab=readme-ov-file)&#13;
&gt; 修改-创建`.toc`的位置为body里面.&#13;
&gt; 修改-批量给 a 标签创建的类名为: `toc-h1` `toc-h2` ... `toc-h6`&#13;
&gt; 修改-适配切换博客主题颜色.&#13;
&gt; 修改-增加滚动页面同时滚动章节.&#13;
&gt; 修改-动画和样式.&#13;
&gt; 修改-滚动页面自动显示&amp;隐藏返回顶部按钮.&#13;
&#13;
可以直接引用.&#13;
&#13;
## 文章增加目录列表(集成到header)&#13;
&#13;
这版把目录按钮集成到了文章的`#header`的按钮里面.&#13;
&#13;
功能和[v.1.0版本](#articletoc.js---文章增加目录列表+一键返回顶部按钮(v1.0))差不多一致(小改动), 同时打算把按钮统统放入`#functionBtn`标签里面, 代码也统一放入 ArticleJs.js 里面.&#13;
&#13;
&gt; 修改-当滚动页面使`#functionBtn`按钮不可见时, 使其悬浮在顶部.&#13;
&gt; 修改-文章目录增加顶部和底部跳转按钮.&#13;
&#13;
图示:&#13;
&#13;
![1](https://github.com/user-attachments/assets/0908287f-3bca-4e11-a6a0-c4919bae120f)&#13;
&#13;
## Fancybox.js - 图片浏览器&#13;
&#13;
&gt; Fancybox [官网](https://www.fancyapps.com)&#13;
&#13;
### config.json 里引用 Fancybox 所需的 CSS 和 JS&#13;
&#13;
&gt; 注意末尾的标点符号.&#13;
&#13;
我这里用的是`5.0`版本, cdn 加速链接.&#13;
&#13;
```json&#13;
'script':'&lt;script src='https://fastly.jsdelivr.net/gh/gjken/gjkdemo.github.io@main/static/ArticleJs.js'&gt;&lt;/script&gt;&lt;script src='https://fastly.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js'&gt;&lt;/script&gt;'&#13;
```&#13;
&#13;
CSS写入到了👉[文章自定义 js 代码](#articlejs.js---文章自定义-js-代码)&#13;
&#13;
- 内容如下:&#13;
&#13;
意思是页面加载完成再加载 CSS, 同时增加 fancybox 必要的绑定函数.&#13;
&#13;
```Javascript&#13;
document.addEventListener('DOMContentLoaded', () =&gt; {&#13;
    document.head.appendChild(&#13;
        Object.assign(document.createElement('link'), {&#13;
            rel: 'stylesheet',&#13;
            href: 'https://fastly.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.css'&#13;
        })&#13;
    );&#13;
    Fancybox.bind('[data-fancybox='gallery']', {});&#13;
});&#13;
```&#13;
&#13;
### 增加自定义匹配 - Gmeek-imgbox&#13;
&#13;
修改 Gmeek 仓库的 Gmeek.py.&#13;
&#13;
&gt; 不知道怎么自定义 Gmeek 仓库的看这👉[通过 Gmeek 仓库美化博客](#通过-gmeek-仓库美化博客)&#13;
&#13;
打开`Gmeek.py`文件, 定位字符串`Gmeek-html`&#13;
&#13;
然后在下面增加代码:&#13;
&#13;
```python&#13;
        # 手动插入外链图片&#13;
        if '&lt;code class='notranslate'&gt;Gmeek-imgbox' in post_body:&#13;
            post_body = re.sub(r'&lt;p&gt;\s*&lt;code class='notranslate'&gt;Gmeek-imgbox='([^']+)'&lt;/code&gt;\s*&lt;/p&gt;', lambda match: f'&lt;div class='ImgLazyLoad-circle'&gt;&lt;/div&gt;\n&lt;img data-fancybox='gallery' img-src='{match.group(1)}'&gt;', post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
- **使用演示**&#13;
&#13;
在 markdown 插入图片:&#13;
&#13;
```html&#13;
`Gmeek-imgbox='https://i0.img2ipfs.com/ipfs/QmNiH2pdrA9Hb61EXgYbKtEssBAGemEjTQRBZbgutUCNx2'`&#13;
```&#13;
&#13;
通过 Actions 转换后实际效果如下, html 里面图片标签会增加 fancybox 所需的`data-fancybox='gallery'`属性.&#13;
&#13;
![1](https://github.com/user-attachments/assets/1bca7934-827b-4375-9a79-9582200cde63)&#13;
&#13;
## 图片懒加载&#13;
&#13;
&gt; 来源: [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
代码内容合并到👉[文章自定义 js 代码](#articlejs.js---文章自定义-js-代码)&#13;
&#13;
关键内容如下:&#13;
&#13;
&lt;details&gt;&lt;summary&gt;Javascript Code&lt;/summary&gt;&#13;
&#13;
```Javascript&#13;
    // 懒加载图片&#13;
	const ob = new IntersectionObserver((entries) =&gt; {&#13;
		entries.forEach(entry =&gt; {&#13;
			if (entry.isIntersecting) {&#13;
				const img = entry.target;&#13;
				const imgContainer = img.previousElementSibling;&#13;
				const handleError = (isError = false) =&gt; {&#13;
					if (imgContainer &amp;&amp; imgContainer.classList.contains('ImgLazyLoad')) {&#13;
						imgContainer.style.display = 'none';&#13;
					}&#13;
					if (isError) {&#13;
						const errorContainer = document.createElement('div');&#13;
						errorContainer.classList.add('Imgerror-container');&#13;
						errorContainer.innerHTML = `&lt;svg xmlns='http://www.w3.org/2000/svg' style='height:60px;' class='Imgerror' viewBox='0 0 1024 1024'&gt;&lt;path fill='#ff5b5b' d='M320 896h-77.833L515.92 622.253a21.333 21.333 0 0 0 3.16-26.133l-89.427-149.053 165.427-330.86A21.333 21.333 0 0 0 576 85.333H96a53.393 53.393 0 0 0-53.333 53.334v746.666A53.393 53.393 0 0 0 96 938.667h224A21.333 21.333 0 0 0 320 896zM96 128h445.48L386.253 438.46a21.333 21.333 0 0 0 .787 20.513L474 603.86l-69.333 69.333-89.62-89.653a53.333 53.333 0 0 0-75.427 0L85.333 737.827v-599.16A10.667 10.667 0 0 1 96 128zM85.333 885.333v-87.166l184.46-184.454a10.667 10.667 0 0 1 15.08 0l89.627 89.62L181.833 896H96a10.667 10.667 0 0 1-10.667-10.667zm192-458.666C336.147 426.667 384 378.813 384 320s-47.853-106.667-106.667-106.667S170.667 261.187 170.667 320s47.853 106.667 106.666 106.667zm0-170.667a64 64 0 1 1-64 64 64.073 64.073 0 0 1 64-64zM928 128H661.333a21.333 21.333 0 0 0-19.08 11.793l-.046.087c-.04.087-.087.173-.127.253L535.587 353.127a21.333 21.333 0 1 0 38.16 19.08l100.773-201.54H928a10.667 10.667 0 0 1 10.667 10.666V652.5L783.713 497.54a53.333 53.333 0 0 0-75.426 0L571.08 634.747a21.333 21.333 0 0 0-3.153 26.153l24.666 41.08-203.646 244.36a21.333 21.333 0 0 0 16.386 34.993H928A53.393 53.393 0 0 0 981.333 928V181.333A53.393 53.393 0 0 0 928 128zm0 810.667H450.88L635.053 717.66a21.333 21.333 0 0 0 1.907-24.667l-23.933-39.886L738.46 527.68a10.667 10.667 0 0 1 15.08 0l185.127 185.153V928A10.667 10.667 0 0 1 928 938.667z'/&gt;&lt;/svg&gt;&lt;p class='Imgerror-message'&gt;图片错误&lt;/p&gt;`;&#13;
						img.parentNode.insertBefore(errorContainer, img.nextSibling);&#13;
						img.style.display = 'none';&#13;
					} else {&#13;
						img.classList.remove('ImgLazyLoad');&#13;
						img.classList.add('ImgLoaded');&#13;
					}&#13;
				};&#13;
&#13;
				img.src = img.getAttribute('img-src');&#13;
				ob.unobserve(img);&#13;
&#13;
				img.onload = () =&gt; handleError(false);&#13;
				img.onerror = () =&gt; handleError(true);&#13;
			}&#13;
		});&#13;
	}, {&#13;
		rootMargin: '0px 0px 500px 0px',&#13;
	});&#13;
&#13;
	document.querySelectorAll('[img-src]').forEach(img =&gt; ob.observe(img));&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
加载动画 CSS, 我把它写到了`primer.css`文件里面.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
&gt; 这个主要样式一定要写在`:root`选择器的前面!&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
	--ImgLazyLoad-circle-shadowColor:#27272745;&#13;
	--ImgLazyLoad-circle-shadowColor2:#28dddf4a;&#13;
}&#13;
&#13;
/* 图片懒加载占位css动画 */&#13;
.ImgLazyLoad-circle {&#13;
	width: 40px;&#13;
	height: 40px;&#13;
	border-radius: 50%;&#13;
	border: 6px #f3f3f3 solid;&#13;
	border-top: 6px #8aefff solid;&#13;
	transition: filter 0.5s ease, opacity 0.5s ease;&#13;
	animation: ImgLazyLoadAni 1.2s infinite;&#13;
	-webkit-animation: ImgLazyLoadAni 1.2s infinite;&#13;
	box-shadow: 6px 6px 14px 0 var(--ImgLazyLoad-circle-shadowColor), -7px -7px 16px 0 var(--ImgLazyLoad-circle-shadowColor2);&#13;
}&#13;
&#13;
@keyframes ImgLazyLoadAni {&#13;
	0% {&#13;
		transform: rotate(0)&#13;
	}&#13;
&#13;
	100% {&#13;
		transform: rotate(360deg)&#13;
	}&#13;
}&#13;
&#13;
@-webkit-keyframes ImgLazyLoadAni {&#13;
	0% {&#13;
		-webkit-transform: rotate(0)&#13;
	}&#13;
&#13;
	100% {&#13;
		-webkit-transform: rotate(360deg)&#13;
	}&#13;
}&#13;
&#13;
/* 图片懒加载文字提示样式 */&#13;
.Imgerror-message {&#13;
	color: #ff5b5b;&#13;
	font-size: 100%;&#13;
	user-select: none;&#13;
}&#13;
&#13;
/* 图片模糊渐显样式 */&#13;
[data-fancybox='gallery']{&#13;
    opacity: 0;&#13;
    filter: blur(15px);&#13;
    transition: opacity 0.5s ease, filter 0.5s ease;&#13;
}&#13;
.ImgLoaded {&#13;
	opacity: 1;&#13;
    filter: blur(0);&#13;
}&#13;
&#13;
:root {&#13;
	--ImgLazyLoad-circle-shadowColor:#0000;&#13;
	--ImgLazyLoad-circle-shadowColor2:#ebfffe&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## [GmeekVercount_uv.js](https://github.com/GJKen/gjken.github.io/blob/main/static/GmeekVercount_uv.min.js) - 网站增加访客计数器&#13;
&#13;
&gt; Vercount [Github](https://github.com/EvanNotFound/vercount)&#13;
&gt; pv 修改成 uv 计数.&#13;
&#13;
建议放入`allHead`里全站添加 js.&#13;
&#13;
```json&#13;
'allHead':'&lt;script src='https://cdn.jsdelivr.net/gh/gjken/gjkdemo.github.io@main/static/GmeekVercount_uv.min.js'&gt;&lt;/script&gt;'&#13;
```&#13;
&#13;
## [NumPagination.js](https://github.com/GJKen/gjken.github.io/blob/main/static/NumPagination.js) - 主页添加数字分页条&#13;
&#13;
&gt; 来源 [Github](https://github.com/liyifanniubi/liyifanniubi.github.io)&#13;
&#13;
未实际测试过.&#13;
&#13;
# 通过 primer.css, 修改博客样式&#13;
&#13;
[primer.css](https://github.com/GJKen/gjken.github.io/blob/main/static/primer.css), 这个文件用来控制网站的整体样式, 存放在我的 git 仓库, 使用 jsdelivr CDN 加速.&#13;
&#13;
对应的选择器只张贴出关键 CSS 部分的修改, ~~不然代码太多了.~~&#13;
&#13;
下面是修改笔记, 不一定实际使用.&#13;
&#13;
&gt; 已知bug: 给body增加`backdrop-filter: blur(30px);`样式时, 会出现页面异常, 待后续修复.&#13;
&#13;
## \&lt;html&gt; 标签样式&#13;
&#13;
`[data-color-mode]`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 增加兼容性动画过渡.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode] {&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --html-bgColor: #151c2f;/* 增加 */&#13;
}&#13;
:root {&#13;
    --html-bgColor: #fff;/* 增加 */&#13;
}&#13;
[data-color-mode] {&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background-color: var(--html-bgColor);&#13;
    -webkit-transition: background-color 0.5s ease;/* 增加 */&#13;
    -moz-transition: background-color 0.5s ease;/* 增加 */&#13;
    -o-transition: background-color 0.5s ease;/* 增加 */&#13;
    transition: background-color 0.5s ease;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \&lt;body&gt; 标签样式&#13;
&#13;
`body`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 增加宽高过渡动画.&#13;
&gt; 增加 1080px 屏幕宽度响应&#13;
&gt; 增加高度 auto 过渡动画, 这是一个较新的属性, Chrome 129+ 才支持.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
body {&#13;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Noto Sans', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';&#13;
    font-size: var(--body-font-size, 14px);&#13;
    line-height: 1.5;&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --body-bgColor: #3b3b3bd9;/* 增加 */&#13;
    --body-shadow-color: #52afff3d;/* 增加 */&#13;
}&#13;
:root {&#13;
    --body-bgColor: #ffffffde;/* 增加 */&#13;
    --body-shadow-color: #50a8e726;/* 增加 */&#13;
	interpolate-size: allow-keywords;/* 增加 */&#13;
}&#13;
body {&#13;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Noto Sans', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';&#13;
    font-size: var(--body-font-size, 14px);&#13;
    line-height: 1.5;&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background: var(--body-bgColor);&#13;
    box-shadow: 0 0 100px var(--body-shadow-color);/* 增加 */&#13;
    border-radius: 10px;/* 增加 */&#13;
	height: auto;&#13;
}&#13;
/* 增加 */&#13;
@media (min-width: 1080px) {&#13;
    body {&#13;
        max-width: 1000px !important;&#13;
    }&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 博客滚动条样式&#13;
&#13;
`::-webkit-scrollbar`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 直接增加下面代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
::-webkit-scrollbar {&#13;
    width: 8px;&#13;
    height: 8px;&#13;
}&#13;
&#13;
::-webkit-scrollbar-thumb {&#13;
    border-radius: 10px;&#13;
    background: #97d3ffa1;&#13;
}&#13;
::-webkit-scrollbar-thumb:hover {&#13;
    background: #81b5daa1;&#13;
}&#13;
&#13;
/* Firefox */&#13;
html {&#13;
    scrollbar-color: #97d3ffa1 transparent;&#13;
    scrollbar-width: thin;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \#header 样式&#13;
&#13;
`#header`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改顶部为 flex 居中布局, 更加美观.&#13;
&gt; 修改头像 hover 样式.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
/* 优化header样式 */&#13;
#header {&#13;
    flex-direction: column !important;&#13;
    align-items: center !important;&#13;
    gap: 10px;&#13;
    padding-bottom: 0 !important;&#13;
    margin-bottom: 24px !important&#13;
}&#13;
&#13;
/* 优化头像样式 */&#13;
#header h1 {&#13;
    display: flex;&#13;
    flex-direction: column !important;&#13;
    align-items: center !important;&#13;
    gap: 15px&#13;
}&#13;
&#13;
#header h1 a {&#13;
    margin: unset !important;&#13;
}&#13;
&#13;
.avatar:hover {&#13;
    transform: scale(1.5) rotate(720deg) !important;&#13;
    box-shadow: 0 0 10px rgb(45 250 255 / 74%);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## \#header 图标样式&#13;
&#13;
`.btn-invisible:hover, .btn-invisible.zeroclipboard-is-hover`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 图标增加阴影.&#13;
&gt; svg 暗黑模式下颜色.&#13;
&gt; 修改图标 hover 样式.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.btn-invisible {&#13;
	color: var(--fgColor-accent, var(--color-accent-fg));&#13;
	background-color: rgba(0, 0, 0, 0);&#13;
	border: 0;&#13;
	border-radius: 6px;&#13;
	box-shadow: none&#13;
}&#13;
&#13;
.btn-invisible:active,&#13;
.btn-invisible.selected,&#13;
.btn-invisible[aria-selected=true],&#13;
.btn-invisible.zeroclipboard-is-active {&#13;
	color: var(--fgColor-accent, var(--color-accent-fg));&#13;
	background: none;&#13;
	border-color: var(--button-default-borderColor-active, var(--color-btn-active-border));&#13;
	outline: 2px solid var(--focus-outlineColor, var(--color-accent-fg));&#13;
	outline-offset: -2px;&#13;
	box-shadow: none&#13;
}&#13;
&#13;
.btn-invisible:active .btn-invisible.zeroclipboard-is-active {&#13;
	background-color: var(--button-default-bgColor-selected, var(--color-btn-selected-bg))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    /* 增加 */&#13;
	--SideNav-bgColor: #00f0ff;&#13;
	--title-right-svgHovercolor:#ff7150;&#13;
	--header-btn-shadowColor:#00000045;&#13;
	--header-btn-shadowColor2:#9bdfff14;&#13;
}&#13;
:root {&#13;
    /* 增加 */&#13;
	--title-right-svgColor:#000;&#13;
	--title-right-svgHovercolor: #ff7804;&#13;
	--header-btn-shadowColor:#fbfbfb26;&#13;
	--header-btn-shadowColor2:#5f5f5f26;&#13;
}&#13;
.btn-invisible {&#13;
	color: var(--fgColor-accent, var(--color-accent-fg));&#13;
	background-color: rgba(0, 0, 0, 0);&#13;
	border: 0;&#13;
	border-radius: 6px;&#13;
	box-shadow: 6px 6px 14px 0 var(--header-btn-shadowColor), -7px -7px 16px 0 var(--header-btn-shadowColor2);&#13;
	transition: box-shadow .4s ease-in-out,filter .4s ease-in-out;&#13;
}&#13;
/* 图标颜色 */&#13;
.btn-invisible svg path{&#13;
	fill: var(--title-right-svgColor);&#13;
}&#13;
/* 图标hover颜色 */&#13;
.btn-invisible:hover svg path,&#13;
.btn-invisible.zeroclipboard-is-hover svg path{&#13;
	fill: var(--title-right-svgHovercolor);&#13;
}&#13;
&#13;
.btn-invisible:active,&#13;
.btn-invisible.selected,&#13;
.btn-invisible[aria-selected=true],&#13;
.btn-invisible.zeroclipboard-is-active {&#13;
	box-shadow: 6px 6px 14px 0 var(--header-btn-shadowColor) inset, -7px -7px 12px 0 var(--header-btn-shadowColor2) inset;&#13;
}&#13;
&#13;
.btn-invisible:active .btn-invisible.zeroclipboard-is-active {&#13;
	box-shadow: 6px 6px 14px 0 var(--header-btn-shadowColor) inset, -7px -7px 12px 0 var(--header-btn-shadowColor2) inset;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 修改文章主页, 文章的列表样式&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 还未想好要怎么改, 先占位.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.border {&#13;
	border: var(--borderWidth-thin, 1px) solid var(--borderColor-default, var(--color-border-default)) !important&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.border {&#13;
	border: var(--borderWidth-thin, 1px) solid var(--borderColor-default, var(--color-border-default)) !important&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;blockquote&gt; 标签样式&#13;
&#13;
`.markdown-body blockquote`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改文字颜色, 适配 light &amp; dark 主题.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body blockquote {&#13;
    padding: 0 1em;&#13;
    color: var(--fgColor-muted, var(--color-fg-muted));&#13;
    border-left: .25em solid var(--borderColor-default, var(--color-border-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    /* 增加 */&#13;
    --markdown-blockquote-color: #ffffff8c;&#13;
    --markdown-blockquote-borderLeft-color: #bbbbbb8c;&#13;
}&#13;
:root {&#13;
    /* 增加 */&#13;
    --markdown-blockquote-color: #656d76;&#13;
    --markdown-blockquote-borderLeft-color: #d0d7de;&#13;
}&#13;
.markdown-body blockquote {&#13;
    padding: 0 1em;&#13;
    color: var(--markdown-blockquote-color);&#13;
    border-left: .25em solid var(--markdown-blockquote-borderLeft-color)&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章文字通用样式&#13;
&#13;
`.markdown-body p, .markdown-body blockquote, .markdown-body ul, .markdown-body ol, .markdown-body dl, .markdown-body table, .markdown-body pre, .markdown-body details`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改行高为 1.75&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body p,&#13;
.markdown-body blockquote,&#13;
.markdown-body ul,&#13;
.markdown-body ol,&#13;
.markdown-body dl,&#13;
.markdown-body table,&#13;
.markdown-body pre,&#13;
.markdown-body details {&#13;
	margin-top: 0;&#13;
	margin-bottom: 16px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body p,&#13;
.markdown-body blockquote,&#13;
.markdown-body ul,&#13;
.markdown-body ol,&#13;
.markdown-body dl,&#13;
.markdown-body table,&#13;
.markdown-body pre,&#13;
.markdown-body details {&#13;
	margin-top: 0;&#13;
	margin-bottom: 16px;&#13;
	line-height: 1.75;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章标题通用样式&#13;
&#13;
`.markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 删除左右 padding.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body h1,&#13;
.markdown-body h2,&#13;
.markdown-body h3,&#13;
.markdown-body h4,&#13;
.markdown-body h5,&#13;
.markdown-body h6 {&#13;
    padding: .22em;&#13;
    margin-top: 24px;&#13;
    margin-bottom: 16px;&#13;
    font-weight: var(--base-text-weight-semibold, 600);&#13;
    line-height: 1.25&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body h1,&#13;
.markdown-body h2,&#13;
.markdown-body h3,&#13;
.markdown-body h4,&#13;
.markdown-body h5,&#13;
.markdown-body h6 {&#13;
    padding: .22em 0;&#13;
    margin-bottom: 16px;&#13;
    font-weight: var(--base-text-weight-semibold, 600);&#13;
    line-height: 1.25&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h1&gt; 标签样式&#13;
&#13;
`.markdown-body h1`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改字体大小1.65em.&#13;
&gt; 删除下 padding, 增加左 padding .22em.&#13;
&gt; 增加 margin-top.&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body h1 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 2em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --markdown-h1-bgColor: #7dc2ff7a;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-h1-bgColor: #c8e5ff7a;/* 增加 */&#13;
}&#13;
.markdown-body h1 {&#13;
    padding-left: .22em;&#13;
    background: var(--markdown-h1-bgColor);/* 增加 */&#13;
    border-radius: 6px;/* 增加 */&#13;
    font-size: 1.65em;&#13;
    border-left: .25em solid #71c4ef63;/* 增加 */&#13;
    padding-left: .25em;/* 增加 */&#13;
    margin-top: 42px;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;h2&gt; 标签样式&#13;
&#13;
`.markdown-body h2`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 删除 padding-bottom.&#13;
&gt; 增加下划线动画.&#13;
&gt; 增加阴影样式.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body h2 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 1.5em;&#13;
    border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body h2 {&#13;
    padding-bottom: .3em;&#13;
    font-size: 1.5em;&#13;
	box-shadow: rgb(41, 150, 186) 0px 9px 18px -15px;/* 增加 */&#13;
	display: inline-block;/* 增加 */&#13;
	border-radius: 6px;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;img&gt; 标签样式&#13;
&#13;
`.markdown-body img`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 增加 hover 动画.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body img {&#13;
    max-width: 100%;&#13;
    box-sizing: content-box;&#13;
    background-color: var(--bgColor-default, var(--color-canvas-default))&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
/* 增加 */&#13;
.markdown-body p {&#13;
    position: relative;&#13;
    overflow: visible;&#13;
    clip-path: inset(0);&#13;
    -webkit-clip-path: inset(0);&#13;
}&#13;
.markdown-body img {&#13;
    max-width: 100%;&#13;
    box-sizing: content-box;&#13;
	/* 增加 */&#13;
    transition: transform 0.3s ease, -webkit-transform 0.3s ease, clip-path 0.3s ease, -webkit-clip-path 0.3s ease;&#13;
}&#13;
/* 增加 */&#13;
.markdown-body img:hover {&#13;
	transform: scale(1.01);&#13;
	-webkit-transform: scale(1.01);&#13;
	clip-path: inset(-4%);&#13;
	-webkit-clip-path: inset(-4%);&#13;
	cursor: zoom-in;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;code&gt; 标签样式&#13;
&#13;
`.markdown-body code, .markdown-body tt`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
    background-color: var(--bgColor-neutral-muted, var(--color-neutral-muted));&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --markdown-code-bgColor: #0198b5a1;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-code-bgColor: #81818138;/* 增加 */&#13;
}&#13;
.markdown-body code,&#13;
.markdown-body tt {&#13;
    background-color: var(--markdown-code-bgColor);&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章代码块样式&#13;
&#13;
`.markdown-body .highlight pre, .markdown-body pre`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 优化 light &amp; dark 主题下的背景色.&#13;
&gt; 增加内阴影.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body .highlight pre,.markdown-body pre {&#13;
    padding: 16px;&#13;
    overflow: auto;&#13;
    font-size: 85%;&#13;
    line-height: 1.45;&#13;
    color: var(--fgColor-default, var(--color-fg-default));&#13;
    background-color: var(--bgColor-muted, var(--color-canvas-subtle));&#13;
    border-radius: 6px&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --markdown-pre-bgColor: #27282d;/* 增加 */&#13;
	--markdown-pre-shadowColor: #00000026;/* 增加 */&#13;
}&#13;
:root {&#13;
    --markdown-pre-bgColor: #f6f8fa;/* 增加 */&#13;
	--markdown-pre-shadowColor: #5f5f5f26;/* 增加 */&#13;
}&#13;
.markdown-body .highlight pre, .markdown-body pre {&#13;
	padding: 16px;&#13;
	overflow: auto;&#13;
	font-size: 85%;&#13;
	line-height: 1.45;&#13;
	color: var(--fgColor-default, var(--color-fg-default));&#13;
	border-radius: 6px;&#13;
	background-color: var(--markdown-pre-bgColor);/* 增加 */&#13;
	box-shadow: 4px 5px 14px 0 var(--markdown-pre-shadowColor) inset;/* 增加 */&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 diff 代码块样式&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 默认的效果可以双击复制到+和-号, 通过 CSS 控制使其无法被选中复制.&#13;
&gt; 直接增加下面代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.pl-mi1 {&#13;
	user-select: text;&#13;
}&#13;
&#13;
.pl-mi1&gt;span {&#13;
	user-select: none;&#13;
}&#13;
&#13;
.pl-md {&#13;
	user-select: text;&#13;
}&#13;
&#13;
.pl-md&gt;span {&#13;
	user-select: none;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
效果图:&#13;
&#13;
![](https://github.com/user-attachments/assets/f3eb7940-ca2b-4952-8fb4-e05a7acc84bd)&#13;
&#13;
## 文章一键复制代码按钮样式&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 给按钮增加 hover 动画, 使其显示&amp;隐藏一键复制按钮.&#13;
&gt; 直接增加下面代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
/* 一键复制hover出入动画 */&#13;
.clipboard-container {&#13;
    opacity: 0;&#13;
    visibility: hidden;&#13;
    pointer-events: none;&#13;
    transition: opacity 0.3s ease, visibility 0s 0.3s;&#13;
    -webkit-transition: opacity 0.3s ease, visibility 0s 0.3s&#13;
}&#13;
&#13;
.snippet-clipboard-content:hover .clipboard-container {&#13;
    opacity: 1;&#13;
    visibility: visible;&#13;
    pointer-events: auto;&#13;
    transition: opacity 0.3s ease, visibility 0s 0s;&#13;
    -webkit-transition: opacity 0.3s ease, visibility 0s 0s&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;a&gt; 标签样式&#13;
&#13;
`a`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 这个选择器经过查找发现有2行重复了, 总之合并成最靠下的那一行.&#13;
&gt; 如果要改白天模式下超链的颜色, 需要定位36行的选择器然后找到`--color-accent-fg: #0969da`&#13;
&gt; 优化 light &amp; dark 主题下的颜色.&#13;
&gt; 修改下划线动画.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --color-accent-fg: #2f81f7;&#13;
}&#13;
/* 这条在12300行左右出现 */&#13;
a {&#13;
    background-color: rgba(0, 0, 0, 0)&#13;
}&#13;
/* 这条在12500行左右出现 */&#13;
a {&#13;
	color: var(--fgColor-accent, var(--color-accent-fg));&#13;
	text-decoration: none&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
[data-color-mode=light][data-light-theme=dark],&#13;
[data-color-mode=light][data-light-theme=dark]::selection,&#13;
[data-color-mode=dark][data-dark-theme=dark],&#13;
[data-color-mode=dark][data-dark-theme=dark]::selection {&#13;
    --color-accent-fg: #20d4ff;&#13;
}&#13;
/* &#13;
合并靠下的那一行, 修改为下面内容:&#13;
*/&#13;
a {&#13;
	background: linear-gradient(#90d1ff, #90d1ff) no-repeat left bottom;&#13;
	background-size: 0 2px;&#13;
	transition: all 0.25s ease;&#13;
	-webkit-transition: all 0.25s ease;&#13;
	color: var(--fgColor-accent, var(--color-accent-fg));&#13;
	text-decoration: none&#13;
}&#13;
/* 增加 */&#13;
.markdown-body a:hover {&#13;
    background-size: 100% 2px;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
## 文章 \&lt;td&gt; 最后的子元素样式&#13;
&#13;
`.markdown-body table td&gt;:last-child`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 修改下标基线对齐位置.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body table td&gt;:last-child {&#13;
	margin-bottom: 0&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
.markdown-body table td&gt;:last-child {&#13;
	margin-bottom: 0;&#13;
	vertical-align: sub&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
效果图:&#13;
&#13;
![](https://github.com/user-attachments/assets/73cdc397-e4c8-45c8-8ecf-02f32af9fd63)&#13;
&#13;
# 通过 Gmeek 仓库美化博客&#13;
&#13;
为什么这样做? `Gmeek-spoilertxt='自娱自乐.~~'`&#13;
&#13;
## Fork Gmeek 仓库&#13;
&#13;
仓库地址👉 https://github.com/Meekdai/Gmeek&#13;
&#13;
![](https://github.com/user-attachments/assets/8794d347-3524-4709-a6f1-fd74c607fc22)&#13;
&#13;
fork 之后, 转到搭建博客的 github 源码,&#13;
&#13;
打开`.github/workflows/Gmeek.yml`文件, 修改构建博客仓库的地址为你自己的仓库地址&#13;
&#13;
![](https://github.com/user-attachments/assets/20d1b3ac-c0fc-44ad-a937-3828b6875a8f)&#13;
&#13;
打开`config.json`文件, 修改右边字段值为👉main, `'GMEEK_VERSION':'main'`&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 如果值是`last`的话, Actions 会失败, 因为默认值`last`是靠模板仓库的 tag 来构建的, 改成 main 就不会构建失败.&#13;
&gt; ~~创建新的 tag 也可以, 但是挺麻烦.~~&#13;
&#13;
## 修改 Actions 定时任务时间&#13;
&#13;
原本为每天 UTC 时间 16 点定时 Actions.&#13;
&#13;
```yaml&#13;
        - cron: '0 16 * * *'&#13;
```&#13;
&#13;
改成每周 UTC 时间 18 点定时 Actions.&#13;
&#13;
```yaml&#13;
        - cron: '0 18 * * 0'&#13;
```&#13;
&#13;
## 修改网站下方的文字&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
下图文字直接修改即可, 不同语言的按需修改.&#13;
&#13;
![](https://github.com/user-attachments/assets/c0f4bca8-174d-4044-a654-12e6322cca9b)&#13;
&#13;
## 修改默认 primer.css 链接&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
![](https://github.com/user-attachments/assets/fd72d93f-5015-44d9-ac79-58dff7e3c116)&#13;
&#13;
这里我直接写改成我存放的链接, 并使用 tag 控制版本.&#13;
&#13;
## 修改模板文件记录&#13;
&#13;
### base.html 文件&#13;
&#13;
&gt; [!Important]&#13;
&gt; base 这个模板文件里增加的代码可以应用到所有页面, 优先级很高.&#13;
&#13;
1. **增加所需的样式.**&#13;
&#13;
&gt; 文章头部背景色.&#13;
&gt; 打字效果动画.&#13;
&gt; 动画(已引用的地方:`#header`打字机光标, `body``#content``functionBtn``.tagTitle``.title-left a``.subnav-search`向上渐显动画).&#13;
&gt; 分离图标的`#functionBtn`样式.&#13;
&#13;
```CSS&#13;
:root{--functionBtnFlex-bgColor:#ffffff61;}&#13;
[data-color-mode=light][data-light-theme=dark],[data-color-mode=light][data-light-theme=dark]::selection,[data-color-mode=dark][data-dark-theme=dark],[data-color-mode=dark][data-dark-theme=dark]::selection{--functionBtnFlex-bgColor:#ffffff00;}&#13;
&#13;
@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}&#13;
&#13;
@keyframes blink{50%{opacity:0}100%{opacity:1}}@-webkit-keyframes blink{50%{opacity:0}100%{opacity:1}}&#13;
&#13;
@keyframes grow {&#13;
    0% {opacity: 0.85;transform: scale(0.5);}&#13;
    100% {opacity: 1;transform: translate(1);}&#13;
}&#13;
@-webkit-keyframes grow {&#13;
    0% {opacity: 0.85;-webkit-transform: scale(0.5);}&#13;
    100% {opacity: 1;-webkit-transform: translate(1);}&#13;
}&#13;
&#13;
@keyframes slide-fade-in {&#13;
	0% {opacity: 0;transform: translate3d(0, 20px, 0);}&#13;
	100% {opacity: 1;transform: translate(0, 0, 0);}&#13;
}&#13;
@-webkit-keyframes slide-fade-in {&#13;
	0% {opacity: 0;-webkit-transform: translate3d(0, 20px, 0);}&#13;
	100% {opacity: 1;-webkit-transform: translate(0, 0, 0);}&#13;
}&#13;
&#13;
#functionBtn{display:flex;justify-content:center;margin:20px 0;gap:20px;transition: transform 0.3s ease-in-out;}&#13;
#functionBtn a{padding:14px 16px;}&#13;
#functionBtn.Btn-flex{position:fixed;margin:0;padding:20px 0;top:-100px;left:0;width:100%;min-width:500px;background-color:var(--functionBtnFlex-bgColor);backdrop-filter:blur(30px);box-shadow:#00000078 0 9px 18px -15px;z-index:100;}&#13;
&#13;
body,#content,#functionBtn,.tagTitle,.title-left a,.subnav-search{-webkit-animation:slide-fade-in 0.8s ease;animation:slide-fade-in 0.8s ease}&#13;
```&#13;
&#13;
2. **定位`#header`, 修改样式.**&#13;
&#13;
&gt; 使用类名区分首页和文章页.&#13;
&#13;
```Diff&#13;
+#header .homepage-header{display:flex;flex-direction:column;align-items:center;gap:10px;margin-bottom:24px;}&#13;
👆&#13;
-#header{display:flex;padding-bottom:8px;border-bottom: 1px solid var(--borderColor-muted, var(--color-border-muted));margin-bottom: 16px;}&#13;
```&#13;
&#13;
### post.html 文件&#13;
&#13;
&gt; [!Important]&#13;
&gt; post 这个模板文件里增加的代码可以应用到所有文章页面.&#13;
&#13;
1. **定位`.postTitle`, 修改样式**&#13;
&#13;
&gt; 修改标题文字居中显示.&#13;
&gt; after 是光标, blink 是光标动画.&#13;
&#13;
```Diff&#13;
+.postTitle{margin:0 auto;font-size:40px;font-weight:bold;}&#13;
+.postTitle::after{content:'|';animation:blink 1s infinite;font-family:fantasy;font-weight:normal;vertical-align:text-top;}&#13;
+.no-blink::after{animation:none;}&#13;
👆&#13;
-.postTitle{margin: auto 0;font-size:40px;font-weight:bold;}&#13;
```&#13;
&#13;
3. **定位样式`#functionBtn .circle`, 删除`margin-right:8px;`**&#13;
&#13;
```Diff&#13;
+#functionBtn .circle{padding: 14px 16px;}&#13;
👆&#13;
-#functionBtn .circle{padding: 14px 16px;margin-right:8px;}&#13;
```&#13;
&#13;
4. **body响应**&#13;
&#13;
定位`@media (max-width:600px) {`, 给 body 增加最小宽度500px: `min-width:500px;`&#13;
&#13;
5. **分离 header 文字以及图标**&#13;
&#13;
&gt; 需要把`.title-right`这个类名全部重命名为`#functionBtn`&#13;
&gt; 增加搜索页按钮&#13;
&gt; 增加文章目录按钮&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```html&#13;
{% block header %}&#13;
&lt;h1 class='postTitle'&gt;{{ blogBase['postTitle'] }}&lt;/h1&gt;&#13;
&lt;div class='title-right'&gt;&#13;
    &lt;a href='{{ blogBase['homeUrl'] }}' id='buttonHome' class='btn btn-invisible circle' title='{{ i18n['home'] }}'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16'&gt;&#13;
            &lt;path id='pathHome' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    {% if blogBase['showPostSource']==1 %}&#13;
    &lt;a href='{{ blogBase['postSourceUrl'] }}' target='_blank' class='btn btn-invisible circle' title='Issue'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16'&gt;&#13;
            &lt;path id='pathIssue' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    {% endif %}&#13;
&#13;
    &lt;a class='btn btn-invisible circle' onclick='modeSwitch();' title='{{ i18n['switchTheme'] }}' {%- if blogBase['themeMode']=='fix' -%}style='display:none;'{%- endif -%}&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='themeSwitch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
&#13;
&lt;/div&gt;&#13;
{% endblock %}&#13;
```&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```html&#13;
{% block header %}&#13;
&lt;h1 class='postTitle'&gt;{{ blogBase['postTitle'] }}&lt;/h1&gt;&#13;
{% endblock %}&#13;
&#13;
{% block functionBtn %}&#13;
&lt;a href='{{ blogBase['homeUrl'] }}' id='buttonHome' class='btn btn-invisible circle' title='{{ i18n['home'] }}'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16'&gt;&lt;path id='pathHome' fill-rule='evenodd'&gt;&lt;/path&gt;&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{% if blogBase['showPostSource']==1 %}&#13;
&lt;a href='{{ blogBase['postSourceUrl'] }}' target='_blank' class='btn btn-invisible circle' title='Issue'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16'&gt;&lt;path id='pathIssue' fill-rule='evenodd'&gt;&lt;/path&gt;&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{% endif %}&#13;
&#13;
&lt;a class='btn btn-invisible circle' onclick='modeSwitch();' title='{{ i18n['switchTheme'] }}' {%- if blogBase['themeMode']=='fix' -%}style='display:none;'{%- endif -%}&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&lt;path id='themeSwitch' fill-rule='evenodd'&gt;&lt;/path&gt;&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
&#13;
&lt;a href='{{ blogBase['homeUrl'] }}/tag.html' id='buttonSearch' class='btn btn-invisible circle' title='{{ i18n['Search'] }}'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='pathSearch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
&#13;
&lt;a class='ArticleTOC btn btn-invisible circle' title='文章目录'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16'&gt;&lt;path&gt;&lt;/path&gt;&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{% endblock %}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
定位`document.getElementById('pathHome').setAttribute('d',IconList['home']);`, 在下面一行增加js.&#13;
&#13;
&gt; 暂时还不知道如何通过变量增加 path 的路径信息, 只能直接模仿原先的增加方式上, 直接写路径.&#13;
&#13;
```Javascript&#13;
document.getElementById('ArticleTOC').setAttribute('d','M1 2.75A.75.75 0 0 1 1.75 2h12.5a.75.75 0 0 1 0 1.5H1.75A.75.75 0 0 1 1 2.75Zm0 5A.75.75 0 0 1 1.75 7h12.5a.75.75 0 0 1 0 1.5H1.75A.75.75 0 0 1 1 7.75ZM1.75 12h12.5a.75.75 0 0 1 0 1.5H1.75a.75.75 0 0 1 0-1.5Z');&#13;
&#13;
document.getElementById('pathSearch').setAttribute('d','M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z');&#13;
```&#13;
&#13;
6. **添加自定义 JS 代码.**&#13;
&#13;
&gt; 添加打字效果.&#13;
&gt; 添加滚动切换显示顶部按钮导航.&#13;
&#13;
定位`&lt;script&gt;`标签, 在里面增加 JS 代码:&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; `document.addEventListener('DOMContentLoaded', () =&gt; {`这个监听不止可写当前功能, 还可写其它功能的代码进去.&#13;
&gt; 实际应用场景我把这块的代码都压缩合并了.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;JavaScript&lt;/summary&gt;&#13;
&#13;
```Javascript&#13;
// 获取 .postTitle 元素的文本内容存储后清空&#13;
const postTitle = document.querySelector('.postTitle');&#13;
const textContent = postTitle.textContent;&#13;
postTitle.textContent = '';&#13;
&#13;
// 定义逐字显示文本的函数, 末尾的数值代表每次输入字符的速度(毫秒)&#13;
let idx = 0;&#13;
const writeTimer = setInterval(() =&gt; {&#13;
    postTitle.textContent = textContent.slice(0, idx++);&#13;
    if (idx &gt; textContent.length) {&#13;
        clearInterval(writeTimer);&#13;
        postTitle.classList.remove('no-blink');&#13;
    }&#13;
}, 80);&#13;
&#13;
postTitle.classList.add('no-blink');&#13;
&#13;
document.addEventListener('DOMContentLoaded', () =&gt; {&#13;
    // 创建检查按钮, 插入到指定id #functionBtn 的后面&#13;
    const checkBtn = document.createElement('div');&#13;
    checkBtn.id = 'checkBtn';&#13;
    const functionBtn = document.getElementById('functionBtn');&#13;
    functionBtn.insertAdjacentElement('afterend', checkBtn);&#13;
&#13;
    // 用 IntersectionObserver 观察 checkBtn 这个div的可见性&#13;
    const observer = new IntersectionObserver(entries =&gt; {&#13;
        entries.forEach(entry =&gt; {&#13;
            const isIntersecting = entry.isIntersecting;&#13;
            functionBtn.classList.toggle('Btn-flex', !isIntersecting);&#13;
            functionBtn.style.top = isIntersecting ? '0' : '-100px';&#13;
        });&#13;
    }, { rootMargin: '300px 0px 0px 0px', threshold: 0 });&#13;
    observer.observe(checkBtn);&#13;
&#13;
    let startY = 0;&#13;
&#13;
    // 通用滚动处理函数&#13;
    const handleScroll = deltaY =&gt; {&#13;
        functionBtn.style.top = deltaY &gt; 0 ? '-100px' : '0';&#13;
    };&#13;
&#13;
// 监听触摸和滚轮事件&#13;
document.addEventListener('touchstart', e =&gt; startY = e.touches[0].clientY);&#13;
document.addEventListener('touchmove', e =&gt; handleScroll(e.touches[0].clientY - startY));&#13;
document.addEventListener('wheel', e =&gt; handleScroll(e.deltaY));&#13;
});&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
### plist.html 文件&#13;
&#13;
&gt; [!Important]&#13;
&gt; plist 这个模板文件里增加的代码可以应用到博客首页.&#13;
&#13;
1. **增加样式.**&#13;
&#13;
```CSS&#13;
.title-left{display:flex;flex-direction:column;align-items:center;gap:20px;}&#13;
```&#13;
&#13;
2. **定位样式`.title-left`, 直接删除相关的所有样式**&#13;
&#13;
3. **定位`.avatar:hover`, 修改样式.**&#13;
&#13;
```CSS&#13;
.avatar:hover{transform:scale(1.5) rotate(720deg);box-shadow:0 0 10px #2dfaffbd;}&#13;
```&#13;
&#13;
4. **分离#header的文字以及图标.**&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```html&#13;
{% block header %}&#13;
&lt;div class='title-left'&gt;&#13;
    &lt;img src='{{ blogBase['avatarUrl'] }}' class='avatar circle' id='avatarImg' alt='avatar'&gt;&#13;
    {%- if blogBase['displayTitle']=='Meekdai' -%}&#13;
    &lt;a class='blogTitle' href='https://meekdai.com'&gt;&lt;span style='font-size:0;'&gt;M&lt;/span&gt;eekdai&lt;/a&gt;&#13;
    {% else -%}&#13;
    &lt;a class='blogTitle'&gt;{{ blogBase['displayTitle'] }}&lt;/a&gt;&#13;
    {%- endif -%}&#13;
&lt;/div&gt;&#13;
&lt;div class='title-right'&gt;&#13;
    &lt;a href='{{ blogBase['homeUrl'] }}/tag.html' id='buttonSearch' class='btn btn-invisible circle' title='{{ i18n['Search'] }}'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='pathSearch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    {% for key, value in blogBase['exlink'].items() -%}&#13;
    &lt;a href='{{ value }}' class='btn btn-invisible circle' title='{{ key }}' target='_blank'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='{{ key }}' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    {%- endfor %}&#13;
    {% for num in blogBase['singeListJson'] -%}&#13;
    &lt;a href='{{ blogBase['homeUrl'] }}/{{ blogBase['singeListJson'][num]['labels'][0] }}.html' class='btn btn-invisible circle' title='{{ blogBase['singeListJson'][num]['postTitle'] }}'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='{{ blogBase['singeListJson'][num]['postTitle'] }}' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    {%- endfor %}&#13;
    &lt;a href='{{ blogBase['homeUrl'] }}/rss.xml' target='_blank' id='buttonRSS' class='btn btn-invisible circle' title='RSS'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='pathRSS' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    &lt;a class='btn btn-invisible circle' onclick='modeSwitch()' title='{{ i18n['switchTheme'] }}' {%- if blogBase['themeMode']=='fix' -%}style='display:none;'{%- endif -%}&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='themeSwitch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
&lt;/div&gt;&#13;
{% endblock %}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```html&#13;
{% block header %}&#13;
&lt;div class='title-left'&gt;&#13;
    &lt;img src='{{ blogBase['avatarUrl'] }}' class='avatar circle' id='avatarImg' alt='avatar'&gt;&#13;
    {%- if blogBase['displayTitle']=='Meekdai' -%}&#13;
    &lt;a class='blogTitle' href='https://meekdai.com'&gt;&lt;span style='font-size:0;'&gt;M&lt;/span&gt;eekdai&lt;/a&gt;&#13;
    {% else -%}&#13;
    &lt;a class='blogTitle'&gt;{{ blogBase['displayTitle'] }}&lt;/a&gt;&#13;
    {%- endif -%}&#13;
&lt;/div&gt;&#13;
{% endblock %}&#13;
&#13;
{% block functionBtn %}&#13;
&lt;a href='{{ blogBase['homeUrl'] }}/tag.html' id='buttonSearch' class='btn btn-invisible circle' title='{{ i18n['Search'] }}'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='pathSearch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{% for key, value in blogBase['exlink'].items() -%}&#13;
&lt;a href='{{ value }}' class='btn btn-invisible circle' title='{{ key }}' target='_blank'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='{{ key }}' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{%- endfor %}&#13;
{% for num in blogBase['singeListJson'] -%}&#13;
&lt;a href='{{ blogBase['homeUrl'] }}/{{ blogBase['singeListJson'][num]['labels'][0] }}.html' class='btn btn-invisible circle' title='{{ blogBase['singeListJson'][num]['postTitle'] }}'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='{{ blogBase['singeListJson'][num]['postTitle'] }}' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{%- endfor %}&#13;
&lt;a href='{{ blogBase['homeUrl'] }}/rss.xml' target='_blank' id='buttonRSS' class='btn btn-invisible circle' title='RSS'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='pathRSS' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
&lt;a class='btn btn-invisible circle' onclick='modeSwitch()' title='{{ i18n['switchTheme'] }}' {%- if blogBase['themeMode']=='fix' -%}style='display:none;'{%- endif -%}&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='themeSwitch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{% endblock %}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
### tag.html 文件&#13;
&#13;
&gt; [!Important]&#13;
&gt; tag 这个模板文件里增加的代码可以应用到搜索页.&#13;
&#13;
1. **打开`tag.html`修改样式, 用了 Diff 代码块, 看着改吧.**&#13;
&#13;
```Diff&#13;
+.title-right{display:flex;align-items:center;flex-direction:column;}&#13;
+.title-right .circle{padding:14px 16px;}&#13;
👆&#13;
-.title-right{display:flex;margin:auto 0 0 auto;}&#13;
-.title-right .circle{padding: 14px 16px;margin-right:8px;}&#13;
```&#13;
&#13;
2. **分离搜索框以及图标.**&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改前&lt;/summary&gt;&#13;
&#13;
```html&#13;
{% block header %}&#13;
&lt;span class='tagTitle'&gt;&lt;span&gt;Loading&lt;/span&gt;&lt;span class='AnimatedEllipsis'&gt;&lt;/span&gt;&lt;/span&gt;&#13;
&lt;div class='title-right'&gt;&#13;
    &lt;div class='subnav-search'&gt;&#13;
        &lt;input type='search' class='form-control subnav-search-input float-left' aria-label='Search site' value='' style='height:32px;'&gt;&#13;
        &lt;button class='btn float-left' type='submit' onclick='javascript:searchShow()'&gt;{{ i18n['Search'] }}&lt;/button&gt;&#13;
        &lt;svg class='subnav-search-icon octicon octicon-search' width='16' height='16' viewBox='0 0 16 16' aria-hidden='true'&gt;&#13;
            &lt;path id='searchSVG' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/div&gt;&#13;
    &lt;a href='{{ blogBase['homeUrl'] }}' id='buttonHome' class='btn btn-invisible circle' title='{{ i18n['home'] }}'&gt;&#13;
        &lt;svg class='octicon' width='16' height='16'&gt;&#13;
            &lt;path id='pathHome' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
    &lt;a class='btn btn-invisible circle' onclick='modeSwitch()' title='{{ i18n['switchTheme'] }}' {%- if blogBase['themeMode']=='fix' -%}style='display:none;'{%- endif -%}&gt;&#13;
        &lt;svg class='octicon' width='16' height='16' &gt;&#13;
            &lt;path id='themeSwitch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
        &lt;/svg&gt;&#13;
    &lt;/a&gt;&#13;
&lt;/div&gt;&#13;
{% endblock %}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&lt;summary&gt;修改后&lt;/summary&gt;&#13;
&#13;
```html&#13;
{% block header %}&#13;
&lt;span class='tagTitle'&gt;&lt;span&gt;Loading&lt;/span&gt;&lt;span class='AnimatedEllipsis'&gt;&lt;/span&gt;&lt;/span&gt;&#13;
&lt;div class='subnav-search'&gt;&#13;
	&lt;input type='search' class='form-control subnav-search-input float-left' aria-label='Search site' value='' style='height:32px;'&gt;&#13;
	&lt;button class='btn float-left' type='submit' onclick='javascript:searchShow()'&gt;{{ i18n['Search'] }}&lt;/button&gt;&#13;
	&lt;svg class='subnav-search-icon octicon octicon-search' width='16' height='16' viewBox='0 0 16 16' aria-hidden='true'&gt;&#13;
		&lt;path id='searchSVG' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/div&gt;&#13;
{% endblock %}&#13;
&#13;
{% block functionBtn %}&#13;
&lt;a href='{{ blogBase['homeUrl'] }}' id='buttonHome' class='btn btn-invisible circle' title='{{ i18n['home'] }}'&gt;&#13;
	&lt;svg class='octicon' width='16' height='16'&gt;&#13;
		&lt;path id='pathHome' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
&lt;a class='btn btn-invisible circle' onclick='modeSwitch()' title='{{ i18n['switchTheme'] }}' {%- if blogBase['themeMode']=='fix' -%}style='display:none;'{%- endif -%}&gt;&#13;
	&lt;svg class='octicon' width='16' height='16' &gt;&#13;
		&lt;path id='themeSwitch' fill-rule='evenodd'&gt;&lt;/path&gt;&#13;
	&lt;/svg&gt;&#13;
&lt;/a&gt;&#13;
{% endblock %}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
#### 修改搜索框样式&#13;
&#13;
1. **定位`.subnav-search`类名. 直接删除这个样式**&#13;
&#13;
2. **定位`.subnav-search-input`类名, 修改以下内容**&#13;
&#13;
```Diff&#13;
+.subnav-search-input{width:160px;}&#13;
+.subnav-search button{padding:5px 8px;}&#13;
👆&#13;
-.subnav-search-input{width:160px;border-top-right-radius:0px;border-bottom-right-radius:0px;}&#13;
-.subnav-search button{padding:5px 8px;border-top-left-radius:0px;border-bottom-left-radius:0px;}&#13;
```&#13;
&#13;
3. 打开`primer.css`, 修改样式&#13;
&#13;
定位`.subnav-search {`, 删除了margin.&#13;
&#13;
```Diff&#13;
+.subnav-search {position: relative;s}&#13;
👆&#13;
-.subnav-search {position: relative;margin-left: 12px}&#13;
```&#13;
&#13;
## 修改[警报强调信息]样式&#13;
&#13;
1. **增加圆角**&#13;
&#13;
打开`Gmeek.py`&#13;
&#13;
定位代码`&lt;style&gt;.markdown-alert{`, 给它增加圆角6px.&#13;
&#13;
`border-radius:6px;`&#13;
&#13;
2. **优化行高显示**&#13;
&#13;
定位`line-height:1;`, 直接删除这个属性.&#13;
&#13;
**效果图:**&#13;
&#13;
![1](https://github.com/user-attachments/assets/884a4371-975b-44a4-8201-80afc1274671)&#13;
&#13;
## 优化任务列表样式&#13;
&#13;
具体问题看[#202](https://github.com/Meekdai/Gmeek/issues/202)&#13;
&#13;
打开`Gmeek.py`, 定位`postBase=self.blogBase.copy()`, 在它的下面增加如下代码:&#13;
&#13;
```python&#13;
        # 优化任务列表样式&#13;
        if '&lt;ul class='contains-task-list'&gt;' in post_body:&#13;
            issue['style']=issue['style']+'&lt;style&gt;.contains-task-list{padding-left:0.9em !important;list-style:none}&lt;/style&gt;'&#13;
```&#13;
&#13;
## 页面底部文字增加图标动画&#13;
&#13;
爱心图标动画.&#13;
&#13;
打开`footer.html`&#13;
&#13;
在`&lt;span id='runday'&gt;`前面插入下面一行 SVG 图标.&#13;
&#13;
```html&#13;
&lt;svg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg' style='margin-right: 4px;height:18px;vertical-align: bottom;fill: #ff5a5a;'class='animate_heartBeatScale'&gt;&lt;path d='M1017.152 426.592a263.296 263.296 0 0 0-502.304-133.92 263.328 263.328 0 0 0-502.304 133.92s5.152 259.264 505.536 520.096c500.32-260.832 499.072-520.096 499.072-520.096zM282.016 194.976a43.2 43.2 0 1 1 .096 86.4 43.2 43.2 0 0 1-.096-86.4zm-135.04 323.232a45.12 45.12 0 0 1-55.488-31.328 289.472 289.472 0 0 1-10.816-66.592C76.64 313.824 142.24 261.472 145.504 258.88a45.024 45.024 0 0 1 63.2 8.032c15.168 19.488 11.744 47.36-7.328 62.72-2.336 1.952-30.784 27.52-30.592 82.24.096 14.752 2.208 31.616 7.488 50.784a45.12 45.12 0 0 1-31.296 55.552z'/&gt;&lt;/svg&gt;&#13;
```&#13;
&#13;
打开`primer.css`, 直接增加动画 CSS 代码.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;CSS Code&lt;/summary&gt;&#13;
&#13;
```CSS&#13;
@keyframes heartBeatScale  {&#13;
    0% {&#13;
        -webkit-transform: scale(1);&#13;
        transform: scale(1)&#13;
    }&#13;
&#13;
    14% {&#13;
        -webkit-transform: scale(1.3);&#13;
        transform: scale(1.3)&#13;
    }&#13;
&#13;
    28% {&#13;
        -webkit-transform: scale(1);&#13;
        transform: scale(1)&#13;
    }&#13;
&#13;
    42% {&#13;
        -webkit-transform: scale(1.3);&#13;
        transform: scale(1.3)&#13;
    }&#13;
&#13;
    70% {&#13;
        -webkit-transform: scale(1);&#13;
        transform: scale(1)&#13;
    }&#13;
}&#13;
@keyframes heartBeatColor {&#13;
    0%, 28%, 70%, 100% {&#13;
        fill: #ff5a5a; /* 初始颜色 */&#13;
    }&#13;
    14%, 42% {&#13;
        fill: red; /* 放大时颜色变化 */&#13;
    }&#13;
}&#13;
&#13;
.animate_heartBeatScale {&#13;
    animation: heartBeatScale 1.3s infinite ease-in-out, heartBeatColor 1.3s infinite ease-in-out;&#13;
    -webkit-animation: heartBeatScale 1.3s infinite ease-in-out, heartBeatColor 1.3s infinite ease-in-out;&#13;
}&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
转到页脚查看实际效果👉 [点我](#footer2)&#13;
&#13;
# Gmeek-html&#13;
&#13;
Github 由于安全考虑, 是不允许使用 iframe 等标签的, 而且在 issues 插入的图片也会自动转换为 Github 的地址, 为了文章的多样性, 在 Gmeek 的 v2.19 版本中添加了支持 html 标签的功能.&#13;
&#13;
&gt; Gmeek 的默认功能, 可使用这个匹配规则转换不同的 html 效果, 详看 👉 [Gmeek进阶](https://blog.meekdai.com/post/%E3%80%90Gmeek-jin-jie-%E3%80%91-wen-zhang-cha-ru-html-biao-qian.html)&#13;
&#13;
&gt; [!Important]&#13;
&gt; 如果在文章中含有代码块标签并且内容为 Gmeek-html, Action 那边会进行转换导致显示错误, 详情看[#201](https://github.com/Meekdai/Gmeek/issues/201)&#13;
&gt; `gmeek-html`换成小写就不会被匹配到.&#13;
&#13;
# 优化 Gmeek-html, 标签转换匹配&#13;
&#13;
打开`Gmeek.py`, 定位字符串`gmeek-html`&#13;
&#13;
替换成下面的代码:&#13;
&#13;
```python&#13;
        # 给原本的Gmeek-html增加小括号判断:&lt;&gt;, 缩小匹配范围&#13;
        if '&lt;code class='notranslate'&gt;Gmeek-html' in post_body:&#13;
            post_body = re.sub(r'&lt;code class='notranslate'&gt;Gmeek-html(&amp;lt;.*?&amp;gt;)&lt;/code&gt;', lambda match: html.unescape(match.group(1)), post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
原先匹配的内容为:`&lt;code class='notranslate'&gt;Gmeek-html(.*?)&lt;/code&gt;`,&#13;
&#13;
这种情况下, 如果在 html 中含有行内代码块标签并且内容含有 Gmeek-html, 会导致转换文章内容时出现显示错误,&#13;
&#13;
更改后缩小了匹配范围, 可直接用行内代码块👉`Gmeek-html`让其在文章内正常显示.&#13;
&#13;
# 增加图片转换, 并适配图片懒加载&#13;
&#13;
打开`Gmeek.py`, 定位字符串`Gmeek-html`&#13;
&#13;
在附近任意行增加代码:&#13;
&#13;
```python&#13;
        # 默认情况插入图片情况下的匹配规则&lt;p&gt; -&gt; &lt;a&gt; -&gt;&lt;img&gt;&#13;
        if '&lt;p&gt;&lt;a target='_blank' rel=' in post_body:&#13;
            post_body = re.sub(r'&lt;p&gt;\s*&lt;a[^&gt;]*?href='([^']+)'[^&gt;]*?&gt;&lt;img[^&gt;]*?src='\1'[^&gt;]*?&gt;&lt;/a&gt;\s*&lt;/p&gt;', lambda match: f'&lt;div class='ImgLazyLoad-circle'&gt;&lt;/div&gt;\n&lt;img data-fancybox='gallery' img-src='{match.group(1)}'&gt;', post_body, flags=re.DOTALL)&#13;
&#13;
        # 通用插入图片情况下的匹配规则&lt;a&gt; -&gt;&lt;img&gt;&#13;
        if '&lt;a target='_blank' rel=' in post_body:&#13;
            post_body = re.sub(r'&lt;a[^&gt;]*?href='([^']+)'[^&gt;]*?&gt;&lt;img[^&gt;]*?src='\1'[^&gt;]*?&gt;&lt;/a&gt;',lambda match: f'&lt;div class='ImgLazyLoad-circle'&gt;&lt;/div&gt;\n&lt;img data-fancybox='gallery' img-src='{match.group(1)}'&gt;', post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
- **使用演示**&#13;
&#13;
在 GitHub markdown 里上传图片, 粘贴&amp;拖拽都行,&#13;
&#13;
然后通过 Actions 转换后实际效果如下, html 里面 img 标签会增加 fancybox 所需的`data-fancybox='gallery'`属性.&#13;
&#13;
![](https://github.com/user-attachments/assets/f57b9f81-36b2-4484-835f-3105d54412a4)&#13;
&#13;
这样优化后可以在 Github issue 的 Preview 里面直接预览图片, 同时还能防备图床问题导致的图片丢失(`Gmeek-spoilertxt='Github, 稳!'`)&#13;
&#13;
唯一缺点就是当 issues 删除后, 图片也会跟着消失, 无法再被外部引用.&#13;
&#13;
# 添加 Gmeek-spoilertxt - 文字防剧透模糊效果&#13;
&#13;
**默认模糊效果, 反复点击可反复显示或隐藏.**&#13;
&#13;
## 打开 Gmeek.py&#13;
&#13;
1. **增加匹配内容:**&#13;
&#13;
```python&#13;
        if '&lt;code class='notranslate'&gt;Gmeek-spoilertxt' in post_body: &#13;
            post_body = re.sub(r'&lt;code class='notranslate'&gt;Gmeek-spoilertxt='([^']+)'&lt;/code&gt;', lambda match: f'&lt;span class='spoilerText'&gt;{match.group(1)}&lt;/span&gt;', post_body, flags=re.DOTALL)&#13;
```&#13;
&#13;
2. **实际转化后的标签如下:**&#13;
&#13;
```html&#13;
&lt;p&gt;测试剧透 &lt;span class='spoilerText'&gt;剧透内容&lt;/span&gt;&lt;/p&gt;&#13;
```&#13;
&#13;
## 打开 post.html&#13;
&#13;
1. **增加 CSS 样式:**&#13;
&#13;
```CSS&#13;
.spoilerText{filter:blur(5px);-webkit-filter:blur(5px);cursor:pointer;transition:filter .3s ease}&#13;
.spoilerText.clear{filter: none;}&#13;
```&#13;
&#13;
2. **定位`&lt;script&gt;`标签, 在里面增加 JS 代码:**&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; `document.addEventListener('DOMContentLoaded', () =&gt; {`这个监听可以写其它功能的代码进去, 不止剧透效果.&#13;
&#13;
&lt;details&gt;&lt;summary&gt;Javascript Code&lt;/summary&gt;&#13;
&#13;
```Javascript&#13;
document.addEventListener('DOMContentLoaded', () =&gt; {&#13;
	const spoilers = document.querySelectorAll('.spoilerText');&#13;
	spoilers.length &amp;&amp; spoilers.forEach(el =&gt; el.onclick = () =&gt; el.classList.toggle('clear'));&#13;
});&#13;
```&#13;
&#13;
&lt;/details&gt;&#13;
&#13;
3. **markdown 输入:**&#13;
&#13;
```&#13;
测试剧透👉`Gmeek-spoilertxt='666666'`.&#13;
```&#13;
&#13;
4. **实际展示:**&#13;
&#13;
测试剧透👉`Gmeek-spoilertxt='666666'`.&#13;
&#13;
# 添加自定义单篇文章代码&#13;
&#13;
```html&#13;
&lt;span id='busuanzi'&gt;&#13;
:heart:感谢第&lt;span&gt;&lt;/span&gt;小伙伴的&lt;span&gt;&lt;/span&gt;次访问关于页面.&#13;
&lt;/span&gt;&#13;
&#13;
&lt;!-- ##{'script':'&lt;script&gt;document.getElementById('user-content-busuanzi').id='busuanzi_container_site_uv';busuanzi=document.getElementById('busuanzi_container_site_uv');busuanzi.style.display='none';busuanzi.childNodes[1].id='busuanzi_value_site_uv';busuanzi.childNodes[3].id='busuanzi_value_site_pv';&lt;/script&gt;&lt;script async src='//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js'&gt;&lt;/script&gt;','style':'&lt;style&gt;#busuanzi_value_site_uv{color:red}#busuanzi_value_site_pv{color:red}&lt;/style&gt;'}## --&gt;&#13;
```&#13;
&#13;
# 自动展开评论区&#13;
&#13;
打开 post.html,&#13;
&#13;
1. **定位`onclick='openComments()'`, 在 html 结构里删除这个点击绑定.**&#13;
&#13;
2. **定位`function openComments(){`这个函数, 在函数结束外边尾行增加`openComments();`**&#13;
&#13;
# icon 图标&#13;
&#13;
写着备用.&#13;
&#13;
1. **打开 Gmeek.py**&#13;
&#13;
[Primer svg](https://primer.style/foundations/icons/#16px)&#13;
&#13;
定位`IconBase={`&#13;
&#13;
在这个 json 格式里面增加图标路径数值.&#13;
&#13;
```json&#13;
&#13;
    'ThreeBars':'M1 2.75A.75.75 0 0 1 1.75 2h12.5a.75.75 0 0 1 0 1.5H1.75A.75.75 0 0 1 1 2.75Zm0 5A.75.75 0 0 1 1.75 7h12.5a.75.75 0 0 1 0 1.5H1.75A.75.75 0 0 1 1 7.75ZM1.75 12h12.5a.75.75 0 0 1 0 1.5H1.75a.75.75 0 0 1 0-1.5Z',&#13;
    'MoveTop':'M3 2.25a.75.75 0 0 1 .75-.75h8.5a.75.75 0 0 1 0 1.5h-8.5A.75.75 0 0 1 3 2.25Zm5.53 2.97 3.75 3.75a.749.749 0 1 1-1.06 1.06L8.75 7.561v6.689a.75.75 0 0 1-1.5 0V7.561L4.78 10.03a.749.749 0 1 1-1.06-1.06l3.75-3.75a.749.749 0 0 1 1.06 0Z',&#13;
    'MoveBottom':'M7.47 10.78a.749.749 0 0 0 1.06 0l3.75-3.75a.749.749 0 1 0-1.06-1.06L8.75 8.439V1.75a.75.75 0 0 0-1.5 0v6.689L4.78 5.97a.749.749 0 1 0-1.06 1.06l3.75 3.75ZM3.75 13a.75.75 0 0 0 0 1.5h8.5a.75.75 0 0 0 0-1.5h-8.5Z'&#13;
```&#13;
&#13;
# issues相关&#13;
&#13;
## 更改发布时间&#13;
&#13;
如需修改发布时间, 可以在 issues 文章最后一行添加如下代码, 里面的时间是采用时间戳的形式, 可以用这个网站👉[Link](https://tool.lu/timestamp) 转换.&#13;
&#13;
&lt;!-- ##{'timestamp':1490764800}## --&gt;&#13;
&#13;
# Issues Label 备份&#13;
&#13;
| Label Name | Color | 效果&#13;
|-|-|-&#13;
| 翻墙 | #cb7b58 | ![](https://img.shields.io/static/v1?label=&amp;message=翻墙&amp;color=cb7b58)&#13;
| 软件 | #5da167 | ![](https://img.shields.io/static/v1?label=&amp;message=软件&amp;color=5da167)&#13;
| 网站 | #7057ff | ![](https://img.shields.io/static/v1?label=&amp;message=网站&amp;color=218155)&#13;
| 日常 | #008672 | ![](https://img.shields.io/static/v1?label=&amp;message=日常&amp;color=008672)&#13;
| 教程 | #0075ca | ![](https://img.shields.io/static/v1?label=&amp;message=教程&amp;color=0075ca)&#13;
| 图片处理 | #4c6cc5 | ![](https://img.shields.io/static/v1?label=&amp;message=图片处理&amp;color=4c6cc5)&#13;
| Anime | #E77AB1 | ![](https://img.shields.io/static/v1?label=&amp;message=Anime&amp;color=E77AB1)&#13;
| Win | #5AB3F3 | ![](https://img.shields.io/static/v1?label=&amp;message=Win&amp;color=5AB3F3)&#13;
| VPS | #5319e7 | ![](https://img.shields.io/static/v1?label=&amp;message=VPS&amp;color=5319e7)&#13;
| JS | #AD3152 | ![](https://img.shields.io/static/v1?label=&amp;message=JS&amp;color=AD3152)&#13;
| CSS | #218155 | ![](https://img.shields.io/static/v1?label=&amp;message=CSS&amp;color=218155)&#13;
| Github | #333333 | ![](https://img.shields.io/static/v1?label=&amp;message=Github&amp;color=333333)&#13;
| CDN | #cb222c | ![](https://img.shields.io/static/v1?label=&amp;message=CDN&amp;color=cb222c)&#13;
| Bug | #D73A4A | ![](https://img.shields.io/static/v1?label=&amp;message=Bug&amp;color=D73A4A)&#13;
| Game | #BC49AB | ![](https://img.shields.io/static/v1?label=&amp;message=Bug&amp;color=BC49AB)&#13;
&#13;
# Readme.md&#13;
&#13;
📄 &gt; 文章总数.&#13;
💬 &gt; 评论总数.&#13;
🌺 &gt; 是统计的所有文章的字符数.&#13;
⏰ &gt; 最后一次 Actions 的时间.。</description><guid isPermaLink="true">https://GJKen.github.io/demo/post/1.html</guid><pubDate>Thu, 09 Jan 2025 08:34:21 +0000</pubDate></item></channel></rss>